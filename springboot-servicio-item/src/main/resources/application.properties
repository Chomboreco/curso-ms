### Nombre identificador del Microservicio
spring.application.name=servicio-items

### Puerto asignado manualmente para el Microservicio
server.port=8002

### Configuración lista de instancias para Ribbon, con Eureka esta configuración ya no aplica, lo hace de manera automática.
#servicio-productos.ribbon.listOfServers=localhost:8001,localhost:9001

### Indicar en dónde está Eureka Server
# Por defecto busca en localhost:8761, sin embargo si eñ servicio es remoto, 
# hay que indicar en dónde está ubicado.
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka

### Configuración de timeout de Hystrix y Ribbon
# Como Hystrix envuelve a Ribbon, se la da a este un tiempo de esper mayor.
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
ribbon.ConnectTimeout=9000
ribbon.ReadTimeout=30000
feign.client.config.default.connectTimeout: 160000000
feign.client.config.default.readTimeout: 160000000

### Configuración para el servidor de configuraciones
#spring.config.import=optional:configserver:

### Configuración de Resilience4j via properties
#resilience4j.circuitbreaker.configs.defecto.sliding-window-size=6
#resilience4j.circuitbreaker.configs.defecto.failure-rate-threshold=50
#resilience4j.circuitbreaker.configs.defecto.wait-duration-in-open-state=20s
#resilience4j.circuitbreaker.configs.defecto.permitted-number-of-calls-in-half-open-state=4
#resilience4j.circuitbreaker.configs.defecto.slow-call-rate-threshold=50
#resilience4j.circuitbreaker.configs.defecto.slow-call-duration-threshold=2s
#resilience4j.circuitbreaker.instances.items.base-config=defecto
 
#resilience4j.timelimiter.configs.defecto.timeout-duration=2s
#resilience4j.timelimiter.instances.items.base-config=defecto

### Configuración para enviar la probabilidad en que se envían las Tracas a Zipkin
spring.sleuth.sampler.probability=1.0
spring.zipkin.base-url=http://zipkin-server:9411/
spring.rabbitmq.host=rabbitmq
spring.zipkin.sender.type=rabbit
